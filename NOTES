* 20 July 2008

$ rails openfrbr

Used the notes here to put everything under git:

http://toolmantim.com/article/2007/12/5/setting_up_a_new_rails_app_with_git

$ cat .gitignore
log/*.log
tmp/**/*
.DS_Store
doc/api
doc/app
*~
$ touch log/.gitignore
$ touch tmp/.gitignore

$ ./script/generate scaffold work
$ ./script/generate scaffold expression
$ ./script/generate scaffold manifestation
$ ./script/generate scaffold item
$ ./script/generate scaffold person
$ ./script/generate scaffold family
$ ./script/generate scaffold corporate_body
$ ./script/generate scaffold concept
$ ./script/generate scaffold frbr_object (object is a reserved word)
$ ./script/generate scaffold event
$ ./script/generate scaffold place

$ git init
$ git add .
$ git commit -m "Initial checkin in; a bit of scaffolding"

On the Eee I ran

$ cd src
$ git clone buff@10.1.0.9:src/openfrbr 

and it copied everything over.

First database migration

$ ./script/generate migration create_works_table
      exists  db/migrate
      create  db/migrate/20080721001523_create_works_table.rb

I edited the file and added basic stuff to make the works table

class CreateWorksTable < ActiveRecord::Migration
  def self.up
    create_table :works do |table|
      table.column :title, :string
      table.column :form, :string
      table.column :date, :date
      table.column :comment, :string
  end

  def self.down
    drop_table :works
  end
end

$ rake db.migrate

There was a bunch of output about all the various tables.

* 25 July 2008

I'm not using these migrations right.  I wanted to load up the
development database with some initial data, and I knew that could be
done in migrations.  (Is this new to Rails 2?  Much of what I found
about this online seems out of date now.)  I made a new migration file
to load in the data, but it didn't take.  I then edited an early migration,
which didn't take either, so I had to do rake:db:migrate VERISON=0 to back to
the very start and then rake:db:migrate to catch up on everything.  I
don't know if this is the right way or not, but it works.

When I refreshed things on the Eee and ran script/server and hit
/works I got some kind of cookie error.  Data copied over by git that
shouldn't have been?  And then the migration stuff didn't work. Said
I'd already created the works table!

* 28 July 2008

rake db:drop; rake db:migrate seems to work well for getting around any 
migration errors. It just drops everything and then you can start over.

Put a bunch of table configuration and test data into the migration files, 
including setting up the HABTM join tables.  Kept resetting the database 
and migrating it from scratch. Probably not the best way to do it, but it 
does sort of keep it tidy and gives me a decent baseline to work with for 
later, when I add attributes to the relationships between things.

* 31 July 2008

Did some more setting up of the entities and defining some test
data.  Didn't set up any relationships between PHILOSOPHER'S STONE
and Platform 9 3/4 as a place, though, or anything like that.

I had a look at the entity-relationship diagram I did that shows all of 
the FRBR entities and relationships, and realized my data model was wrong. 
I need to have attributes on the relationships, so instead of 
has_and_belongs_to_many I need to use has_many :through, and then set up 
the join with attributes.  A work can be created by Person A and also have 
Person B as a subject.  I don't want to clutter it all up with tons of 
different tables for all those joins.

Looked at a polymorphism plug-in but I don't feel like tackling that.

Since sqlite won't work on the Eee I tried to get it going with 
Postgresql, but I don't think I was running the daemon right because it 
couldn't connect.  I'd better tackle fixing sqlite again, before messing 
about with anything more serious.

* 2 August 2008

Checked FRBR and FRAD and updated the attributes on the entities.  Thought
about how to connect them all with has_many :through but haven't done
that yet.  Should use these expressions of FRBR in RDF:

  http://vocab.org/frbr/core
  http://vocab.org/frbr/extended
  
Created app/views/layouts/application.html.erb and then removed all of the
other layouts.  The application layout will be used by all views now.
I'll do a bit of CSS and styling to get a left nav going, or something
like that.

For fun I thought I'd try autocompletion on manifestation titles, just
to see how that worked.  Followed what is explained here:

  http://codeintensity.blogspot.com/2008/02/auto-complete-text-fields-in-rails-2.html
  
After a few minutes of this I decided I was getting ahead of myself, so I stopped.

Fiddled with the CSS so there's a left nav.

Removed public/index.html and added this to routes.rb:

  map.root :controller => "works"

Now the default for http://localhost:3000/ is to list all the works.

* 5 August 2008

I installed Ubuntu on my Eee and now I can use Rails without any trouble.  I was
getting errors with rake db:migrate on the old OS but now all is well.






